[
    {
        "contract": "SafeMath",
        "contract_vars": [],
        "inheritance": [],
        "functions": [
            {
                "name": "add(uint256,uint256)",
                "visibility": "internal",
                "modifiers": [],
                "read_vars": [],
                "write_vars": [],
                "internal_calls": [
                    "require(bool,string)"
                ],
                "external_calls": []
            },
            {
                "name": "sub(uint256,uint256)",
                "visibility": "internal",
                "modifiers": [],
                "read_vars": [],
                "write_vars": [],
                "internal_calls": [
                    "sub"
                ],
                "external_calls": []
            },
            {
                "name": "sub(uint256,uint256,string)",
                "visibility": "internal",
                "modifiers": [],
                "read_vars": [],
                "write_vars": [],
                "internal_calls": [
                    "require(bool,string)"
                ],
                "external_calls": []
            },
            {
                "name": "mul(uint256,uint256)",
                "visibility": "internal",
                "modifiers": [],
                "read_vars": [],
                "write_vars": [],
                "internal_calls": [
                    "require(bool,string)"
                ],
                "external_calls": []
            },
            {
                "name": "div(uint256,uint256)",
                "visibility": "internal",
                "modifiers": [],
                "read_vars": [],
                "write_vars": [],
                "internal_calls": [
                    "div"
                ],
                "external_calls": []
            },
            {
                "name": "div(uint256,uint256,string)",
                "visibility": "internal",
                "modifiers": [],
                "read_vars": [],
                "write_vars": [],
                "internal_calls": [
                    "require(bool,string)"
                ],
                "external_calls": []
            }
        ],
        "modifiers": []
    },
    {
        "contract": "IBEP20",
        "contract_vars": [],
        "inheritance": [],
        "functions": [
            {
                "name": "totalSupply()",
                "visibility": "external",
                "modifiers": [],
                "read_vars": [],
                "write_vars": [],
                "internal_calls": [],
                "external_calls": []
            },
            {
                "name": "decimals()",
                "visibility": "external",
                "modifiers": [],
                "read_vars": [],
                "write_vars": [],
                "internal_calls": [],
                "external_calls": []
            },
            {
                "name": "symbol()",
                "visibility": "external",
                "modifiers": [],
                "read_vars": [],
                "write_vars": [],
                "internal_calls": [],
                "external_calls": []
            },
            {
                "name": "name()",
                "visibility": "external",
                "modifiers": [],
                "read_vars": [],
                "write_vars": [],
                "internal_calls": [],
                "external_calls": []
            },
            {
                "name": "getOwner()",
                "visibility": "external",
                "modifiers": [],
                "read_vars": [],
                "write_vars": [],
                "internal_calls": [],
                "external_calls": []
            },
            {
                "name": "balanceOf(address)",
                "visibility": "external",
                "modifiers": [],
                "read_vars": [],
                "write_vars": [],
                "internal_calls": [],
                "external_calls": []
            },
            {
                "name": "transfer(address,uint256)",
                "visibility": "external",
                "modifiers": [],
                "read_vars": [],
                "write_vars": [],
                "internal_calls": [],
                "external_calls": []
            },
            {
                "name": "allowance(address,address)",
                "visibility": "external",
                "modifiers": [],
                "read_vars": [],
                "write_vars": [],
                "internal_calls": [],
                "external_calls": []
            },
            {
                "name": "approve(address,uint256)",
                "visibility": "external",
                "modifiers": [],
                "read_vars": [],
                "write_vars": [],
                "internal_calls": [],
                "external_calls": []
            },
            {
                "name": "transferFrom(address,address,uint256)",
                "visibility": "external",
                "modifiers": [],
                "read_vars": [],
                "write_vars": [],
                "internal_calls": [],
                "external_calls": []
            }
        ],
        "modifiers": []
    },
    {
        "contract": "IDEXFactory",
        "contract_vars": [],
        "inheritance": [],
        "functions": [
            {
                "name": "createPair(address,address)",
                "visibility": "external",
                "modifiers": [],
                "read_vars": [],
                "write_vars": [],
                "internal_calls": [],
                "external_calls": []
            }
        ],
        "modifiers": []
    },
    {
        "contract": "IDEXRouter",
        "contract_vars": [],
        "inheritance": [],
        "functions": [
            {
                "name": "factory()",
                "visibility": "external",
                "modifiers": [],
                "read_vars": [],
                "write_vars": [],
                "internal_calls": [],
                "external_calls": []
            },
            {
                "name": "WETH()",
                "visibility": "external",
                "modifiers": [],
                "read_vars": [],
                "write_vars": [],
                "internal_calls": [],
                "external_calls": []
            },
            {
                "name": "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
                "visibility": "external",
                "modifiers": [],
                "read_vars": [],
                "write_vars": [],
                "internal_calls": [],
                "external_calls": []
            },
            {
                "name": "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
                "visibility": "external",
                "modifiers": [],
                "read_vars": [],
                "write_vars": [],
                "internal_calls": [],
                "external_calls": []
            },
            {
                "name": "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
                "visibility": "external",
                "modifiers": [],
                "read_vars": [],
                "write_vars": [],
                "internal_calls": [],
                "external_calls": []
            },
            {
                "name": "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
                "visibility": "external",
                "modifiers": [],
                "read_vars": [],
                "write_vars": [],
                "internal_calls": [],
                "external_calls": []
            },
            {
                "name": "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
                "visibility": "external",
                "modifiers": [],
                "read_vars": [],
                "write_vars": [],
                "internal_calls": [],
                "external_calls": []
            }
        ],
        "modifiers": []
    },
    {
        "contract": "ShadowAuth",
        "contract_vars": [
            "owner",
            "authorizations",
            "NUM_PERMISSIONS",
            "permissionNameToIndex",
            "permissionIndexToName",
            "lockedPermissions"
        ],
        "inheritance": [],
        "functions": [
            {
                "name": "constructor(address)",
                "visibility": "internal",
                "modifiers": [],
                "read_vars": [
                    "NUM_PERMISSIONS"
                ],
                "write_vars": [
                    "authorizations",
                    "owner",
                    "permissionIndexToName",
                    "permissionNameToIndex"
                ],
                "internal_calls": [],
                "external_calls": []
            },
            {
                "name": "authorizeFor(address,string)",
                "visibility": "public",
                "modifiers": [
                    "authorizedFor"
                ],
                "read_vars": [
                    "permissionNameToIndex"
                ],
                "write_vars": [
                    "authorizations"
                ],
                "internal_calls": [
                    "authorizedFor"
                ],
                "external_calls": []
            },
            {
                "name": "authorizeForMultiplePermissions(address,string[])",
                "visibility": "public",
                "modifiers": [
                    "authorizedFor"
                ],
                "read_vars": [
                    "permissionNameToIndex"
                ],
                "write_vars": [
                    "authorizations"
                ],
                "internal_calls": [
                    "authorizedFor"
                ],
                "external_calls": []
            },
            {
                "name": "unauthorizeFor(address,string)",
                "visibility": "public",
                "modifiers": [
                    "authorizedFor"
                ],
                "read_vars": [
                    "owner",
                    "permissionNameToIndex"
                ],
                "write_vars": [
                    "authorizations"
                ],
                "internal_calls": [
                    "require(bool,string)",
                    "authorizedFor"
                ],
                "external_calls": []
            },
            {
                "name": "unauthorizeForMultiplePermissions(address,string[])",
                "visibility": "public",
                "modifiers": [
                    "authorizedFor"
                ],
                "read_vars": [
                    "owner",
                    "permissionNameToIndex"
                ],
                "write_vars": [
                    "authorizations"
                ],
                "internal_calls": [
                    "require(bool,string)",
                    "authorizedFor"
                ],
                "external_calls": []
            },
            {
                "name": "isOwner(address)",
                "visibility": "public",
                "modifiers": [],
                "read_vars": [
                    "owner"
                ],
                "write_vars": [],
                "internal_calls": [],
                "external_calls": []
            },
            {
                "name": "isAuthorizedFor(address,string)",
                "visibility": "public",
                "modifiers": [],
                "read_vars": [
                    "authorizations",
                    "permissionNameToIndex"
                ],
                "write_vars": [],
                "internal_calls": [],
                "external_calls": []
            },
            {
                "name": "isAuthorizedFor(address,Permission)",
                "visibility": "public",
                "modifiers": [],
                "read_vars": [
                    "authorizations"
                ],
                "write_vars": [],
                "internal_calls": [],
                "external_calls": []
            },
            {
                "name": "transferOwnership(address)",
                "visibility": "public",
                "modifiers": [
                    "onlyOwner"
                ],
                "read_vars": [
                    "NUM_PERMISSIONS",
                    "owner"
                ],
                "write_vars": [
                    "authorizations",
                    "owner"
                ],
                "internal_calls": [
                    "onlyOwner"
                ],
                "external_calls": []
            },
            {
                "name": "getPermissionNameToIndex(string)",
                "visibility": "public",
                "modifiers": [],
                "read_vars": [
                    "permissionNameToIndex"
                ],
                "write_vars": [],
                "internal_calls": [],
                "external_calls": []
            },
            {
                "name": "getPermissionUnlockTime(string)",
                "visibility": "public",
                "modifiers": [],
                "read_vars": [
                    "lockedPermissions",
                    "permissionNameToIndex"
                ],
                "write_vars": [],
                "internal_calls": [],
                "external_calls": []
            },
            {
                "name": "isLocked(string)",
                "visibility": "public",
                "modifiers": [],
                "read_vars": [
                    "lockedPermissions",
                    "permissionNameToIndex"
                ],
                "write_vars": [],
                "internal_calls": [],
                "external_calls": []
            },
            {
                "name": "lockPermission(string,uint64)",
                "visibility": "public",
                "modifiers": [
                    "authorizedFor"
                ],
                "read_vars": [
                    "permissionNameToIndex",
                    "block.timestamp"
                ],
                "write_vars": [
                    "lockedPermissions"
                ],
                "internal_calls": [
                    "authorizedFor"
                ],
                "external_calls": []
            },
            {
                "name": "unlockPermission(string)",
                "visibility": "public",
                "modifiers": [],
                "read_vars": [
                    "lockedPermissions",
                    "permissionNameToIndex",
                    "block.timestamp"
                ],
                "write_vars": [
                    "lockedPermissions"
                ],
                "internal_calls": [
                    "require(bool,string)",
                    "getPermissionUnlockTime"
                ],
                "external_calls": []
            },
            {
                "name": "slitherConstructorConstantVariables()",
                "visibility": "internal",
                "modifiers": [],
                "read_vars": [],
                "write_vars": [
                    "NUM_PERMISSIONS"
                ],
                "internal_calls": [],
                "external_calls": []
            }
        ],
        "modifiers": [
            {
                "name": "onlyOwner()",
                "visibility": "internal",
                "read_vars": [
                    "msg.sender"
                ],
                "write_vars": [],
                "internal_calls": [
                    "require(bool,string)",
                    "isOwner"
                ],
                "external_calls": []
            },
            {
                "name": "authorizedFor(Permission)",
                "visibility": "internal",
                "read_vars": [
                    "lockedPermissions",
                    "permissionIndexToName",
                    "msg.sender"
                ],
                "write_vars": [],
                "internal_calls": [
                    "require(bool,string)",
                    "abi.encodePacked()",
                    "isAuthorizedFor"
                ],
                "external_calls": [
                    "abi.encodePacked(Not authorized. You need the permission ,permissionIndexToName[uint256(permission)])"
                ]
            }
        ]
    },
    {
        "contract": "IDividendDistributor",
        "contract_vars": [],
        "inheritance": [],
        "functions": [
            {
                "name": "setDistributionCriteria(uint256,uint256)",
                "visibility": "external",
                "modifiers": [],
                "read_vars": [],
                "write_vars": [],
                "internal_calls": [],
                "external_calls": []
            },
            {
                "name": "setShare(address,uint256)",
                "visibility": "external",
                "modifiers": [],
                "read_vars": [],
                "write_vars": [],
                "internal_calls": [],
                "external_calls": []
            },
            {
                "name": "deposit()",
                "visibility": "external",
                "modifiers": [],
                "read_vars": [],
                "write_vars": [],
                "internal_calls": [],
                "external_calls": []
            },
            {
                "name": "process(uint256)",
                "visibility": "external",
                "modifiers": [],
                "read_vars": [],
                "write_vars": [],
                "internal_calls": [],
                "external_calls": []
            },
            {
                "name": "claimDividend()",
                "visibility": "external",
                "modifiers": [],
                "read_vars": [],
                "write_vars": [],
                "internal_calls": [],
                "external_calls": []
            }
        ],
        "modifiers": []
    },
    {
        "contract": "DividendDistributor",
        "contract_vars": [
            "_token",
            "BUSD",
            "WBNB",
            "router",
            "shareholders",
            "shareholderIndexes",
            "shareholderClaims",
            "shares",
            "totalShares",
            "totalDividends",
            "totalDistributed",
            "dividendsPerShare",
            "dividendsPerShareAccuracyFactor",
            "minPeriod",
            "minDistribution",
            "currentIndex",
            "initialized"
        ],
        "inheritance": [
            "IDividendDistributor"
        ],
        "functions": [
            {
                "name": "setDistributionCriteria(uint256,uint256)",
                "visibility": "external",
                "modifiers": [],
                "read_vars": [],
                "write_vars": [],
                "internal_calls": [],
                "external_calls": []
            },
            {
                "name": "setShare(address,uint256)",
                "visibility": "external",
                "modifiers": [],
                "read_vars": [],
                "write_vars": [],
                "internal_calls": [],
                "external_calls": []
            },
            {
                "name": "deposit()",
                "visibility": "external",
                "modifiers": [],
                "read_vars": [],
                "write_vars": [],
                "internal_calls": [],
                "external_calls": []
            },
            {
                "name": "process(uint256)",
                "visibility": "external",
                "modifiers": [],
                "read_vars": [],
                "write_vars": [],
                "internal_calls": [],
                "external_calls": []
            },
            {
                "name": "claimDividend()",
                "visibility": "external",
                "modifiers": [],
                "read_vars": [],
                "write_vars": [],
                "internal_calls": [],
                "external_calls": []
            },
            {
                "name": "constructor(address)",
                "visibility": "public",
                "modifiers": [],
                "read_vars": [
                    "msg.sender"
                ],
                "write_vars": [
                    "_token",
                    "router"
                ],
                "internal_calls": [],
                "external_calls": []
            },
            {
                "name": "setDistributionCriteria(uint256,uint256)",
                "visibility": "external",
                "modifiers": [
                    "onlyToken"
                ],
                "read_vars": [],
                "write_vars": [
                    "minDistribution",
                    "minPeriod"
                ],
                "internal_calls": [
                    "onlyToken"
                ],
                "external_calls": []
            },
            {
                "name": "setShare(address,uint256)",
                "visibility": "external",
                "modifiers": [
                    "onlyToken"
                ],
                "read_vars": [
                    "shares",
                    "totalShares"
                ],
                "write_vars": [
                    "shares",
                    "totalShares"
                ],
                "internal_calls": [
                    "onlyToken",
                    "distributeDividend",
                    "addShareholder",
                    "getCumulativeDividends",
                    "removeShareholder"
                ],
                "external_calls": [
                    "totalShares.sub(shares[shareholder].amount)",
                    "totalShares.sub(shares[shareholder].amount).add(amount)"
                ]
            },
            {
                "name": "deposit()",
                "visibility": "external",
                "modifiers": [
                    "onlyToken"
                ],
                "read_vars": [
                    "BUSD",
                    "WBNB",
                    "dividendsPerShare",
                    "dividendsPerShareAccuracyFactor",
                    "router",
                    "totalDividends",
                    "totalShares",
                    "block.timestamp",
                    "msg.value",
                    "this"
                ],
                "write_vars": [
                    "dividendsPerShare",
                    "totalDividends"
                ],
                "internal_calls": [
                    "onlyToken"
                ],
                "external_calls": [
                    "BUSD.balanceOf(address(this))",
                    "BUSD.balanceOf(address(this))",
                    "totalDividends.add(amount)",
                    "dividendsPerShare.add(dividendsPerShareAccuracyFactor.mul(amount).div(totalShares))",
                    "dividendsPerShareAccuracyFactor.mul(amount).div(totalShares)",
                    "new address[](2)",
                    "router.swapExactETHForTokensSupportingFeeOnTransferTokens{value: msg.value}(0,path,address(this),block.timestamp)",
                    "BUSD.balanceOf(address(this)).sub(balanceBefore)",
                    "dividendsPerShareAccuracyFactor.mul(amount)"
                ]
            },
            {
                "name": "process(uint256)",
                "visibility": "external",
                "modifiers": [
                    "onlyToken"
                ],
                "read_vars": [
                    "currentIndex",
                    "shareholders"
                ],
                "write_vars": [
                    "currentIndex"
                ],
                "internal_calls": [
                    "onlyToken",
                    "shouldDistribute",
                    "distributeDividend",
                    "gasleft()"
                ],
                "external_calls": [
                    "gasLeft.sub(gasleft()())",
                    "gasUsed.add(gasLeft.sub(gasleft()()))"
                ]
            },
            {
                "name": "shouldDistribute(address)",
                "visibility": "internal",
                "modifiers": [],
                "read_vars": [
                    "minDistribution",
                    "minPeriod",
                    "shareholderClaims",
                    "block.timestamp"
                ],
                "write_vars": [],
                "internal_calls": [
                    "getUnpaidEarnings"
                ],
                "external_calls": []
            },
            {
                "name": "distributeDividend(address)",
                "visibility": "internal",
                "modifiers": [],
                "read_vars": [
                    "BUSD",
                    "shares",
                    "totalDistributed",
                    "block.timestamp"
                ],
                "write_vars": [
                    "shareholderClaims",
                    "shares",
                    "totalDistributed"
                ],
                "internal_calls": [
                    "getUnpaidEarnings",
                    "getCumulativeDividends"
                ],
                "external_calls": [
                    "totalDistributed.add(amount)",
                    "BUSD.transfer(shareholder,amount)",
                    "shares[shareholder].totalRealised.add(amount)"
                ]
            },
            {
                "name": "claimDividend()",
                "visibility": "external",
                "modifiers": [],
                "read_vars": [
                    "msg.sender"
                ],
                "write_vars": [],
                "internal_calls": [
                    "distributeDividend"
                ],
                "external_calls": []
            },
            {
                "name": "getUnpaidEarnings(address)",
                "visibility": "public",
                "modifiers": [],
                "read_vars": [
                    "shares"
                ],
                "write_vars": [],
                "internal_calls": [
                    "getCumulativeDividends"
                ],
                "external_calls": [
                    "shareholderTotalDividends.sub(shareholderTotalExcluded)"
                ]
            },
            {
                "name": "getCumulativeDividends(uint256)",
                "visibility": "internal",
                "modifiers": [],
                "read_vars": [
                    "dividendsPerShare",
                    "dividendsPerShareAccuracyFactor"
                ],
                "write_vars": [],
                "internal_calls": [],
                "external_calls": [
                    "share.mul(dividendsPerShare).div(dividendsPerShareAccuracyFactor)",
                    "share.mul(dividendsPerShare)"
                ]
            },
            {
                "name": "addShareholder(address)",
                "visibility": "internal",
                "modifiers": [],
                "read_vars": [
                    "shareholders"
                ],
                "write_vars": [
                    "shareholderIndexes",
                    "shareholders"
                ],
                "internal_calls": [],
                "external_calls": [
                    "shareholders.push(shareholder)"
                ]
            },
            {
                "name": "removeShareholder(address)",
                "visibility": "internal",
                "modifiers": [],
                "read_vars": [
                    "shareholderIndexes",
                    "shareholders"
                ],
                "write_vars": [
                    "shareholderIndexes",
                    "shareholders"
                ],
                "internal_calls": [],
                "external_calls": [
                    "shareholders.pop()"
                ]
            },
            {
                "name": "slitherConstructorVariables()",
                "visibility": "internal",
                "modifiers": [],
                "read_vars": [],
                "write_vars": [
                    "BUSD",
                    "WBNB",
                    "dividendsPerShareAccuracyFactor",
                    "minDistribution",
                    "minPeriod"
                ],
                "internal_calls": [],
                "external_calls": []
            }
        ],
        "modifiers": [
            {
                "name": "initialization()",
                "visibility": "internal",
                "read_vars": [
                    "initialized"
                ],
                "write_vars": [
                    "initialized"
                ],
                "internal_calls": [
                    "require(bool)"
                ],
                "external_calls": []
            },
            {
                "name": "onlyToken()",
                "visibility": "internal",
                "read_vars": [
                    "_token",
                    "msg.sender"
                ],
                "write_vars": [],
                "internal_calls": [
                    "require(bool)"
                ],
                "external_calls": []
            }
        ]
    },
    {
        "contract": "ShadowFi",
        "contract_vars": [
            "owner",
            "authorizations",
            "NUM_PERMISSIONS",
            "permissionNameToIndex",
            "permissionIndexToName",
            "lockedPermissions",
            "BUSD",
            "WBNB",
            "DEAD",
            "ZERO",
            "_name",
            "_symbol",
            "_decimals",
            "_totalSupply",
            "_maxSupply",
            "_maxTxAmount",
            "_balances",
            "_allowances",
            "isFeeExempt",
            "isTxLimitExempt",
            "isDividendExempt",
            "allowedAddresses",
            "airdropped",
            "blackList",
            "liquidityFee",
            "buybackFee",
            "reflectionFee",
            "marketingFee",
            "totalBuyFee",
            "totalSellFee",
            "feeDenominator",
            "autoLiquidityReceiver",
            "marketingFeeReceiver",
            "targetLiquidity",
            "targetLiquidityDenominator",
            "router",
            "pancakeV2BNBPair",
            "pairs",
            "launchedAt",
            "buybackMultiplierNumerator",
            "buybackMultiplierDenominator",
            "buybackMultiplierTriggeredAt",
            "buybackMultiplierLength",
            "feesOnNormalTransfers",
            "distributor",
            "distributorGas",
            "swapEnabled",
            "swapThreshold",
            "inSwap",
            "transferBlockTime"
        ],
        "inheritance": [
            "ShadowAuth",
            "IBEP20"
        ],
        "functions": [
            {
                "name": "constructor(address)",
                "visibility": "internal",
                "modifiers": [],
                "read_vars": [
                    "NUM_PERMISSIONS"
                ],
                "write_vars": [
                    "authorizations",
                    "owner",
                    "permissionIndexToName",
                    "permissionNameToIndex"
                ],
                "internal_calls": [],
                "external_calls": []
            },
            {
                "name": "authorizeFor(address,string)",
                "visibility": "public",
                "modifiers": [
                    "authorizedFor"
                ],
                "read_vars": [
                    "permissionNameToIndex"
                ],
                "write_vars": [
                    "authorizations"
                ],
                "internal_calls": [
                    "authorizedFor"
                ],
                "external_calls": []
            },
            {
                "name": "authorizeForMultiplePermissions(address,string[])",
                "visibility": "public",
                "modifiers": [
                    "authorizedFor"
                ],
                "read_vars": [
                    "permissionNameToIndex"
                ],
                "write_vars": [
                    "authorizations"
                ],
                "internal_calls": [
                    "authorizedFor"
                ],
                "external_calls": []
            },
            {
                "name": "unauthorizeFor(address,string)",
                "visibility": "public",
                "modifiers": [
                    "authorizedFor"
                ],
                "read_vars": [
                    "owner",
                    "permissionNameToIndex"
                ],
                "write_vars": [
                    "authorizations"
                ],
                "internal_calls": [
                    "require(bool,string)",
                    "authorizedFor"
                ],
                "external_calls": []
            },
            {
                "name": "unauthorizeForMultiplePermissions(address,string[])",
                "visibility": "public",
                "modifiers": [
                    "authorizedFor"
                ],
                "read_vars": [
                    "owner",
                    "permissionNameToIndex"
                ],
                "write_vars": [
                    "authorizations"
                ],
                "internal_calls": [
                    "require(bool,string)",
                    "authorizedFor"
                ],
                "external_calls": []
            },
            {
                "name": "isOwner(address)",
                "visibility": "public",
                "modifiers": [],
                "read_vars": [
                    "owner"
                ],
                "write_vars": [],
                "internal_calls": [],
                "external_calls": []
            },
            {
                "name": "isAuthorizedFor(address,string)",
                "visibility": "public",
                "modifiers": [],
                "read_vars": [
                    "authorizations",
                    "permissionNameToIndex"
                ],
                "write_vars": [],
                "internal_calls": [],
                "external_calls": []
            },
            {
                "name": "isAuthorizedFor(address,Permission)",
                "visibility": "public",
                "modifiers": [],
                "read_vars": [
                    "authorizations"
                ],
                "write_vars": [],
                "internal_calls": [],
                "external_calls": []
            },
            {
                "name": "transferOwnership(address)",
                "visibility": "public",
                "modifiers": [
                    "onlyOwner"
                ],
                "read_vars": [
                    "NUM_PERMISSIONS",
                    "owner"
                ],
                "write_vars": [
                    "authorizations",
                    "owner"
                ],
                "internal_calls": [
                    "onlyOwner"
                ],
                "external_calls": []
            },
            {
                "name": "getPermissionNameToIndex(string)",
                "visibility": "public",
                "modifiers": [],
                "read_vars": [
                    "permissionNameToIndex"
                ],
                "write_vars": [],
                "internal_calls": [],
                "external_calls": []
            },
            {
                "name": "getPermissionUnlockTime(string)",
                "visibility": "public",
                "modifiers": [],
                "read_vars": [
                    "lockedPermissions",
                    "permissionNameToIndex"
                ],
                "write_vars": [],
                "internal_calls": [],
                "external_calls": []
            },
            {
                "name": "isLocked(string)",
                "visibility": "public",
                "modifiers": [],
                "read_vars": [
                    "lockedPermissions",
                    "permissionNameToIndex"
                ],
                "write_vars": [],
                "internal_calls": [],
                "external_calls": []
            },
            {
                "name": "lockPermission(string,uint64)",
                "visibility": "public",
                "modifiers": [
                    "authorizedFor"
                ],
                "read_vars": [
                    "permissionNameToIndex",
                    "block.timestamp"
                ],
                "write_vars": [
                    "lockedPermissions"
                ],
                "internal_calls": [
                    "authorizedFor"
                ],
                "external_calls": []
            },
            {
                "name": "unlockPermission(string)",
                "visibility": "public",
                "modifiers": [],
                "read_vars": [
                    "lockedPermissions",
                    "permissionNameToIndex",
                    "block.timestamp"
                ],
                "write_vars": [
                    "lockedPermissions"
                ],
                "internal_calls": [
                    "require(bool,string)",
                    "getPermissionUnlockTime"
                ],
                "external_calls": []
            },
            {
                "name": "totalSupply()",
                "visibility": "external",
                "modifiers": [],
                "read_vars": [],
                "write_vars": [],
                "internal_calls": [],
                "external_calls": []
            },
            {
                "name": "decimals()",
                "visibility": "external",
                "modifiers": [],
                "read_vars": [],
                "write_vars": [],
                "internal_calls": [],
                "external_calls": []
            },
            {
                "name": "symbol()",
                "visibility": "external",
                "modifiers": [],
                "read_vars": [],
                "write_vars": [],
                "internal_calls": [],
                "external_calls": []
            },
            {
                "name": "name()",
                "visibility": "external",
                "modifiers": [],
                "read_vars": [],
                "write_vars": [],
                "internal_calls": [],
                "external_calls": []
            },
            {
                "name": "getOwner()",
                "visibility": "external",
                "modifiers": [],
                "read_vars": [],
                "write_vars": [],
                "internal_calls": [],
                "external_calls": []
            },
            {
                "name": "balanceOf(address)",
                "visibility": "external",
                "modifiers": [],
                "read_vars": [],
                "write_vars": [],
                "internal_calls": [],
                "external_calls": []
            },
            {
                "name": "transfer(address,uint256)",
                "visibility": "external",
                "modifiers": [],
                "read_vars": [],
                "write_vars": [],
                "internal_calls": [],
                "external_calls": []
            },
            {
                "name": "allowance(address,address)",
                "visibility": "external",
                "modifiers": [],
                "read_vars": [],
                "write_vars": [],
                "internal_calls": [],
                "external_calls": []
            },
            {
                "name": "approve(address,uint256)",
                "visibility": "external",
                "modifiers": [],
                "read_vars": [],
                "write_vars": [],
                "internal_calls": [],
                "external_calls": []
            },
            {
                "name": "transferFrom(address,address,uint256)",
                "visibility": "external",
                "modifiers": [],
                "read_vars": [],
                "write_vars": [],
                "internal_calls": [],
                "external_calls": []
            },
            {
                "name": "constructor(uint256)",
                "visibility": "public",
                "modifiers": [],
                "read_vars": [
                    "DEAD",
                    "WBNB",
                    "_totalSupply",
                    "pairs",
                    "pancakeV2BNBPair",
                    "router",
                    "msg.sender",
                    "this"
                ],
                "write_vars": [
                    "_allowances",
                    "_balances",
                    "allowedAddresses",
                    "autoLiquidityReceiver",
                    "distributor",
                    "isDividendExempt",
                    "isFeeExempt",
                    "isTxLimitExempt",
                    "marketingFeeReceiver",
                    "pairs",
                    "pancakeV2BNBPair",
                    "router",
                    "transferBlockTime"
                ],
                "internal_calls": [
                    "constructor"
                ],
                "external_calls": [
                    "router.factory()",
                    "pairs.push(pancakeV2BNBPair)",
                    "new DividendDistributor(address(router))",
                    "IDEXFactory(router.factory()).createPair(WBNB,address(this))"
                ]
            },
            {
                "name": "receive()",
                "visibility": "external",
                "modifiers": [],
                "read_vars": [],
                "write_vars": [],
                "internal_calls": [],
                "external_calls": []
            },
            {
                "name": "totalSupply()",
                "visibility": "external",
                "modifiers": [],
                "read_vars": [
                    "DEAD",
                    "ZERO",
                    "_totalSupply"
                ],
                "write_vars": [],
                "internal_calls": [
                    "balanceOf"
                ],
                "external_calls": [
                    "_totalSupply.sub(balanceOf(DEAD))",
                    "_totalSupply.sub(balanceOf(DEAD)).sub(balanceOf(ZERO))"
                ]
            },
            {
                "name": "decimals()",
                "visibility": "external",
                "modifiers": [],
                "read_vars": [
                    "_decimals"
                ],
                "write_vars": [],
                "internal_calls": [],
                "external_calls": []
            },
            {
                "name": "symbol()",
                "visibility": "external",
                "modifiers": [],
                "read_vars": [
                    "_symbol"
                ],
                "write_vars": [],
                "internal_calls": [],
                "external_calls": []
            },
            {
                "name": "name()",
                "visibility": "external",
                "modifiers": [],
                "read_vars": [
                    "_name"
                ],
                "write_vars": [],
                "internal_calls": [],
                "external_calls": []
            },
            {
                "name": "getOwner()",
                "visibility": "external",
                "modifiers": [],
                "read_vars": [
                    "owner"
                ],
                "write_vars": [],
                "internal_calls": [],
                "external_calls": []
            },
            {
                "name": "balanceOf(address)",
                "visibility": "public",
                "modifiers": [],
                "read_vars": [
                    "_balances"
                ],
                "write_vars": [],
                "internal_calls": [],
                "external_calls": []
            },
            {
                "name": "allowance(address,address)",
                "visibility": "external",
                "modifiers": [],
                "read_vars": [
                    "_allowances"
                ],
                "write_vars": [],
                "internal_calls": [],
                "external_calls": []
            },
            {
                "name": "approve(address,uint256)",
                "visibility": "public",
                "modifiers": [],
                "read_vars": [
                    "allowedAddresses",
                    "blackList",
                    "transferBlockTime",
                    "block.timestamp",
                    "msg.sender"
                ],
                "write_vars": [
                    "_allowances"
                ],
                "internal_calls": [
                    "require(bool,string)"
                ],
                "external_calls": []
            },
            {
                "name": "approveMax(address)",
                "visibility": "external",
                "modifiers": [],
                "read_vars": [],
                "write_vars": [],
                "internal_calls": [
                    "approve"
                ],
                "external_calls": []
            },
            {
                "name": "transfer(address,uint256)",
                "visibility": "external",
                "modifiers": [],
                "read_vars": [
                    "msg.sender"
                ],
                "write_vars": [],
                "internal_calls": [
                    "_transferFrom"
                ],
                "external_calls": []
            },
            {
                "name": "transferFrom(address,address,uint256)",
                "visibility": "external",
                "modifiers": [],
                "read_vars": [
                    "_allowances",
                    "msg.sender"
                ],
                "write_vars": [
                    "_allowances"
                ],
                "internal_calls": [
                    "_transferFrom"
                ],
                "external_calls": [
                    "_allowances[sender][msg.sender].sub(amount,Insufficient Allowance)"
                ]
            },
            {
                "name": "_transferFrom(address,address,uint256)",
                "visibility": "internal",
                "modifiers": [],
                "read_vars": [
                    "_balances",
                    "allowedAddresses",
                    "blackList",
                    "distributor",
                    "distributorGas",
                    "inSwap",
                    "isDividendExempt",
                    "pancakeV2BNBPair",
                    "transferBlockTime",
                    "block.timestamp",
                    "msg.sender"
                ],
                "write_vars": [
                    "_balances"
                ],
                "internal_calls": [
                    "require(bool,string)",
                    "launched",
                    "swapBack",
                    "_basicTransfer",
                    "require(bool)",
                    "takeFee",
                    "shouldSwapBack",
                    "shouldTakeFee",
                    "launch",
                    "checkTxLimit"
                ],
                "external_calls": [
                    "_balances[sender].sub(amount,Insufficient Balance)",
                    "distributor.setShare(recipient,_balances[recipient])",
                    "distributor.setShare(sender,_balances[sender])",
                    "_balances[recipient].add(amountReceived)",
                    "distributor.process(distributorGas)"
                ]
            },
            {
                "name": "_basicTransfer(address,address,uint256)",
                "visibility": "internal",
                "modifiers": [],
                "read_vars": [
                    "_balances"
                ],
                "write_vars": [
                    "_balances"
                ],
                "internal_calls": [],
                "external_calls": [
                    "_balances[recipient].add(amount)",
                    "_balances[sender].sub(amount,Insufficient Balance)"
                ]
            },
            {
                "name": "checkTxLimit(address,uint256)",
                "visibility": "internal",
                "modifiers": [],
                "read_vars": [
                    "_maxTxAmount",
                    "isTxLimitExempt"
                ],
                "write_vars": [],
                "internal_calls": [
                    "require(bool,string)"
                ],
                "external_calls": []
            },
            {
                "name": "shouldTakeFee(address,address)",
                "visibility": "internal",
                "modifiers": [],
                "read_vars": [
                    "feesOnNormalTransfers",
                    "isFeeExempt",
                    "pairs"
                ],
                "write_vars": [],
                "internal_calls": [
                    "launched"
                ],
                "external_calls": []
            },
            {
                "name": "getTotalFee(bool)",
                "visibility": "public",
                "modifiers": [],
                "read_vars": [
                    "buybackMultiplierLength",
                    "buybackMultiplierTriggeredAt",
                    "feeDenominator",
                    "launchedAt",
                    "totalBuyFee",
                    "totalSellFee",
                    "block.number",
                    "block.timestamp"
                ],
                "write_vars": [],
                "internal_calls": [
                    "getMultipliedFee"
                ],
                "external_calls": [
                    "buybackMultiplierTriggeredAt.add(buybackMultiplierLength)",
                    "feeDenominator.sub(1)"
                ]
            },
            {
                "name": "getMultipliedFee()",
                "visibility": "public",
                "modifiers": [],
                "read_vars": [
                    "buybackMultiplierDenominator",
                    "buybackMultiplierLength",
                    "buybackMultiplierNumerator",
                    "buybackMultiplierTriggeredAt",
                    "totalSellFee",
                    "block.timestamp"
                ],
                "write_vars": [],
                "internal_calls": [],
                "external_calls": [
                    "totalFee.add(feeIncrease.mul(remainingTime).div(buybackMultiplierLength))",
                    "totalFee.mul(buybackMultiplierNumerator)",
                    "buybackMultiplierTriggeredAt.add(buybackMultiplierLength).sub(block.timestamp)",
                    "totalFee.mul(buybackMultiplierNumerator).div(buybackMultiplierDenominator)",
                    "feeIncrease.mul(remainingTime).div(buybackMultiplierLength)",
                    "totalFee.mul(buybackMultiplierNumerator).div(buybackMultiplierDenominator).sub(totalFee)",
                    "buybackMultiplierTriggeredAt.add(buybackMultiplierLength)",
                    "feeIncrease.mul(remainingTime)"
                ]
            },
            {
                "name": "takeFee(address,address,uint256)",
                "visibility": "internal",
                "modifiers": [],
                "read_vars": [
                    "_balances",
                    "feeDenominator",
                    "this"
                ],
                "write_vars": [
                    "_balances"
                ],
                "internal_calls": [
                    "isSell",
                    "getTotalFee"
                ],
                "external_calls": [
                    "amount.mul(getTotalFee(isSell(recipient))).div(feeDenominator)",
                    "amount.mul(getTotalFee(isSell(recipient)))",
                    "_balances[address(this)].add(feeAmount)",
                    "amount.sub(feeAmount)"
                ]
            },
            {
                "name": "isSell(address)",
                "visibility": "internal",
                "modifiers": [],
                "read_vars": [
                    "pairs"
                ],
                "write_vars": [],
                "internal_calls": [],
                "external_calls": []
            },
            {
                "name": "shouldSwapBack()",
                "visibility": "internal",
                "modifiers": [],
                "read_vars": [
                    "_balances",
                    "inSwap",
                    "pancakeV2BNBPair",
                    "swapEnabled",
                    "swapThreshold",
                    "msg.sender",
                    "this"
                ],
                "write_vars": [],
                "internal_calls": [],
                "external_calls": []
            },
            {
                "name": "swapBack()",
                "visibility": "internal",
                "modifiers": [
                    "swapping"
                ],
                "read_vars": [
                    "WBNB",
                    "autoLiquidityReceiver",
                    "distributor",
                    "liquidityFee",
                    "marketingFee",
                    "marketingFeeReceiver",
                    "reflectionFee",
                    "router",
                    "swapThreshold",
                    "targetLiquidity",
                    "targetLiquidityDenominator",
                    "totalBuyFee",
                    "block.timestamp",
                    "this"
                ],
                "write_vars": [],
                "internal_calls": [
                    "swapping",
                    "isOverLiquified",
                    "abi.encodePacked()",
                    "balance(address)"
                ],
                "external_calls": [
                    "swapThreshold.mul(dynamicLiquidityFee)",
                    "amountBNB.mul(reflectionFee).div(totalBNBFee)",
                    "amountBNB.mul(reflectionFee)",
                    "router.addLiquidityETH{value: amountBNBLiquidity}(address(this),amountToLiquify,0,0,autoLiquidityReceiver,block.timestamp)",
                    "totalBuyFee.sub(dynamicLiquidityFee.div(2))",
                    "distributor.deposit{value: amountBNBReflection}()",
                    "swapThreshold.sub(amountToLiquify)",
                    "amountBNB.mul(marketingFee).div(totalBNBFee)",
                    "amountBNB.mul(marketingFee)",
                    "router.swapExactTokensForETHSupportingFeeOnTransferTokens(amountToSwap,0,path,address(this),block.timestamp)",
                    "abi.encodePacked(SwapBack failed with error ,e)",
                    "address(marketingFeeReceiver).call{gas: 30000,value: amountBNBMarketing}()",
                    "dynamicLiquidityFee.div(2)",
                    "new address[](2)",
                    "amountBNB.mul(dynamicLiquidityFee).div(totalBNBFee).div(2)",
                    "amountBNB.mul(dynamicLiquidityFee).div(totalBNBFee)",
                    "amountBNB.mul(dynamicLiquidityFee)",
                    "swapThreshold.mul(dynamicLiquidityFee).div(totalBuyFee).div(2)",
                    "address(this).balance.sub(balanceBefore)",
                    "swapThreshold.mul(dynamicLiquidityFee).div(totalBuyFee)"
                ]
            },
            {
                "name": "triggerBuyback(uint256,bool)",
                "visibility": "external",
                "modifiers": [
                    "authorizedFor"
                ],
                "read_vars": [
                    "buybackMultiplierLength",
                    "block.timestamp",
                    "msg.sender"
                ],
                "write_vars": [
                    "buybackMultiplierTriggeredAt"
                ],
                "internal_calls": [
                    "authorizedFor",
                    "burn"
                ],
                "external_calls": []
            },
            {
                "name": "clearBuybackMultiplier()",
                "visibility": "external",
                "modifiers": [
                    "authorizedFor"
                ],
                "read_vars": [],
                "write_vars": [
                    "buybackMultiplierTriggeredAt"
                ],
                "internal_calls": [
                    "authorizedFor"
                ],
                "external_calls": []
            },
            {
                "name": "buyTokens(uint256,address)",
                "visibility": "internal",
                "modifiers": [
                    "swapping"
                ],
                "read_vars": [
                    "WBNB",
                    "router",
                    "block.timestamp",
                    "this"
                ],
                "write_vars": [],
                "internal_calls": [
                    "swapping",
                    "revert(string)",
                    "abi.encodePacked()"
                ],
                "external_calls": [
                    "abi.encodePacked(Buyback failed with error ,reason)",
                    "new address[](2)",
                    "router.swapExactETHForTokensSupportingFeeOnTransferTokens{value: amount}(0,path,to,block.timestamp)"
                ]
            },
            {
                "name": "setBuybackMultiplierSettings(uint256,uint256,uint256)",
                "visibility": "external",
                "modifiers": [
                    "authorizedFor"
                ],
                "read_vars": [],
                "write_vars": [
                    "buybackMultiplierDenominator",
                    "buybackMultiplierLength",
                    "buybackMultiplierNumerator"
                ],
                "internal_calls": [
                    "authorizedFor",
                    "require(bool)"
                ],
                "external_calls": []
            },
            {
                "name": "launched()",
                "visibility": "internal",
                "modifiers": [],
                "read_vars": [
                    "launchedAt"
                ],
                "write_vars": [],
                "internal_calls": [],
                "external_calls": []
            },
            {
                "name": "launch()",
                "visibility": "internal",
                "modifiers": [],
                "read_vars": [
                    "block.number",
                    "block.timestamp"
                ],
                "write_vars": [
                    "launchedAt"
                ],
                "internal_calls": [],
                "external_calls": []
            },
            {
                "name": "setTxLimit(uint256)",
                "visibility": "external",
                "modifiers": [
                    "authorizedFor"
                ],
                "read_vars": [
                    "_totalSupply"
                ],
                "write_vars": [
                    "_maxTxAmount"
                ],
                "internal_calls": [
                    "authorizedFor",
                    "require(bool)"
                ],
                "external_calls": []
            },
            {
                "name": "setIsDividendExempt(address,bool)",
                "visibility": "external",
                "modifiers": [
                    "authorizedFor"
                ],
                "read_vars": [
                    "_balances",
                    "distributor",
                    "pancakeV2BNBPair",
                    "this"
                ],
                "write_vars": [
                    "isDividendExempt"
                ],
                "internal_calls": [
                    "authorizedFor",
                    "require(bool)"
                ],
                "external_calls": [
                    "distributor.setShare(holder,_balances[holder])",
                    "distributor.setShare(holder,0)"
                ]
            },
            {
                "name": "setIsFeeExempt(address,bool)",
                "visibility": "external",
                "modifiers": [
                    "authorizedFor"
                ],
                "read_vars": [],
                "write_vars": [
                    "isFeeExempt"
                ],
                "internal_calls": [
                    "authorizedFor"
                ],
                "external_calls": []
            },
            {
                "name": "setIsTxLimitExempt(address,bool)",
                "visibility": "external",
                "modifiers": [
                    "authorizedFor"
                ],
                "read_vars": [],
                "write_vars": [
                    "isTxLimitExempt"
                ],
                "internal_calls": [
                    "authorizedFor"
                ],
                "external_calls": []
            },
            {
                "name": "setFees(uint256,uint256,uint256,uint256,uint256,uint256)",
                "visibility": "external",
                "modifiers": [
                    "authorizedFor"
                ],
                "read_vars": [
                    "feeDenominator",
                    "totalBuyFee",
                    "totalSellFee"
                ],
                "write_vars": [
                    "buybackFee",
                    "feeDenominator",
                    "liquidityFee",
                    "marketingFee",
                    "reflectionFee",
                    "totalBuyFee",
                    "totalSellFee"
                ],
                "internal_calls": [
                    "require(bool,string)",
                    "authorizedFor"
                ],
                "external_calls": [
                    "_liquidityFee.add(_buybackFee)",
                    "_liquidityFee.add(_buybackFee).add(_reflectionFee).add(_marketingFee)",
                    "_liquidityFee.add(_buybackFee).add(_reflectionFee)"
                ]
            },
            {
                "name": "setFeeReceivers(address,address)",
                "visibility": "external",
                "modifiers": [
                    "authorizedFor"
                ],
                "read_vars": [],
                "write_vars": [
                    "autoLiquidityReceiver",
                    "marketingFeeReceiver"
                ],
                "internal_calls": [
                    "authorizedFor"
                ],
                "external_calls": []
            },
            {
                "name": "setSwapBackSettings(bool,uint256)",
                "visibility": "external",
                "modifiers": [
                    "authorizedFor"
                ],
                "read_vars": [],
                "write_vars": [
                    "swapEnabled",
                    "swapThreshold"
                ],
                "internal_calls": [
                    "authorizedFor"
                ],
                "external_calls": []
            },
            {
                "name": "setTargetLiquidity(uint256,uint256)",
                "visibility": "external",
                "modifiers": [
                    "authorizedFor"
                ],
                "read_vars": [],
                "write_vars": [
                    "targetLiquidity",
                    "targetLiquidityDenominator"
                ],
                "internal_calls": [
                    "authorizedFor"
                ],
                "external_calls": []
            },
            {
                "name": "setDistributionCriteria(uint256,uint256)",
                "visibility": "external",
                "modifiers": [
                    "authorizedFor"
                ],
                "read_vars": [
                    "distributor"
                ],
                "write_vars": [],
                "internal_calls": [
                    "authorizedFor"
                ],
                "external_calls": [
                    "distributor.setDistributionCriteria(_minPeriod,_minDistribution)"
                ]
            },
            {
                "name": "setDistributorSettings(uint256)",
                "visibility": "external",
                "modifiers": [
                    "authorizedFor"
                ],
                "read_vars": [],
                "write_vars": [
                    "distributorGas"
                ],
                "internal_calls": [
                    "authorizedFor",
                    "require(bool)"
                ],
                "external_calls": []
            },
            {
                "name": "getCirculatingSupply()",
                "visibility": "public",
                "modifiers": [],
                "read_vars": [
                    "DEAD",
                    "ZERO",
                    "_maxSupply"
                ],
                "write_vars": [],
                "internal_calls": [
                    "balanceOf"
                ],
                "external_calls": [
                    "_maxSupply.sub(balanceOf(DEAD)).sub(balanceOf(ZERO))",
                    "_maxSupply.sub(balanceOf(DEAD))"
                ]
            },
            {
                "name": "getLiquidityBacking(uint256)",
                "visibility": "public",
                "modifiers": [],
                "read_vars": [
                    "pancakeV2BNBPair"
                ],
                "write_vars": [],
                "internal_calls": [
                    "getCirculatingSupply",
                    "balanceOf"
                ],
                "external_calls": [
                    "accuracy.mul(balanceOf(pancakeV2BNBPair).mul(2)).div(getCirculatingSupply())",
                    "accuracy.mul(balanceOf(pancakeV2BNBPair).mul(2))",
                    "balanceOf(pancakeV2BNBPair).mul(2)"
                ]
            },
            {
                "name": "isOverLiquified(uint256,uint256)",
                "visibility": "public",
                "modifiers": [],
                "read_vars": [],
                "write_vars": [],
                "internal_calls": [
                    "getLiquidityBacking"
                ],
                "external_calls": []
            },
            {
                "name": "claimDividend()",
                "visibility": "external",
                "modifiers": [],
                "read_vars": [
                    "distributor"
                ],
                "write_vars": [],
                "internal_calls": [],
                "external_calls": [
                    "distributor.claimDividend()"
                ]
            },
            {
                "name": "addPair(address)",
                "visibility": "external",
                "modifiers": [
                    "authorizedFor"
                ],
                "read_vars": [
                    "pairs"
                ],
                "write_vars": [
                    "pairs"
                ],
                "internal_calls": [
                    "authorizedFor"
                ],
                "external_calls": [
                    "pairs.push(pair)"
                ]
            },
            {
                "name": "removeLastPair()",
                "visibility": "external",
                "modifiers": [
                    "authorizedFor"
                ],
                "read_vars": [
                    "pairs"
                ],
                "write_vars": [
                    "pairs"
                ],
                "internal_calls": [
                    "authorizedFor"
                ],
                "external_calls": [
                    "pairs.pop()"
                ]
            },
            {
                "name": "setFeesOnNormalTransfers(bool)",
                "visibility": "external",
                "modifiers": [
                    "authorizedFor"
                ],
                "read_vars": [],
                "write_vars": [
                    "feesOnNormalTransfers"
                ],
                "internal_calls": [
                    "authorizedFor"
                ],
                "external_calls": []
            },
            {
                "name": "setLaunchedAt(uint256)",
                "visibility": "external",
                "modifiers": [
                    "authorizedFor"
                ],
                "read_vars": [],
                "write_vars": [
                    "launchedAt"
                ],
                "internal_calls": [
                    "authorizedFor"
                ],
                "external_calls": []
            },
            {
                "name": "setAllowedAddress(address,bool)",
                "visibility": "external",
                "modifiers": [
                    "onlyOwner"
                ],
                "read_vars": [],
                "write_vars": [
                    "allowedAddresses"
                ],
                "internal_calls": [
                    "onlyOwner"
                ],
                "external_calls": []
            },
            {
                "name": "burn(address,uint256)",
                "visibility": "public",
                "modifiers": [],
                "read_vars": [
                    "DEAD"
                ],
                "write_vars": [],
                "internal_calls": [
                    "_transferFrom"
                ],
                "external_calls": []
            },
            {
                "name": "airdrop(address,uint256)",
                "visibility": "external",
                "modifiers": [
                    "onlyOwner"
                ],
                "read_vars": [
                    "msg.sender"
                ],
                "write_vars": [
                    "airdropped"
                ],
                "internal_calls": [
                    "_transferFrom",
                    "onlyOwner"
                ],
                "external_calls": []
            },
            {
                "name": "isAirdropped(address)",
                "visibility": "external",
                "modifiers": [],
                "read_vars": [
                    "airdropped"
                ],
                "write_vars": [],
                "internal_calls": [],
                "external_calls": []
            },
            {
                "name": "setBlackListed(address,bool)",
                "visibility": "external",
                "modifiers": [
                    "onlyOwner"
                ],
                "read_vars": [],
                "write_vars": [
                    "blackList"
                ],
                "internal_calls": [
                    "onlyOwner"
                ],
                "external_calls": []
            },
            {
                "name": "slitherConstructorVariables()",
                "visibility": "internal",
                "modifiers": [],
                "read_vars": [
                    "_decimals",
                    "_maxSupply",
                    "_totalSupply"
                ],
                "write_vars": [
                    "BUSD",
                    "DEAD",
                    "WBNB",
                    "ZERO",
                    "_maxSupply",
                    "_maxTxAmount",
                    "_totalSupply",
                    "buybackFee",
                    "buybackMultiplierDenominator",
                    "buybackMultiplierLength",
                    "buybackMultiplierNumerator",
                    "distributorGas",
                    "feeDenominator",
                    "feesOnNormalTransfers",
                    "liquidityFee",
                    "marketingFee",
                    "reflectionFee",
                    "swapEnabled",
                    "swapThreshold",
                    "targetLiquidity",
                    "targetLiquidityDenominator",
                    "totalBuyFee",
                    "totalSellFee"
                ],
                "internal_calls": [],
                "external_calls": []
            },
            {
                "name": "slitherConstructorConstantVariables()",
                "visibility": "internal",
                "modifiers": [],
                "read_vars": [],
                "write_vars": [
                    "NUM_PERMISSIONS",
                    "_decimals",
                    "_name",
                    "_symbol"
                ],
                "internal_calls": [],
                "external_calls": []
            }
        ],
        "modifiers": [
            {
                "name": "onlyOwner()",
                "visibility": "internal",
                "read_vars": [
                    "msg.sender"
                ],
                "write_vars": [],
                "internal_calls": [
                    "isOwner",
                    "require(bool,string)"
                ],
                "external_calls": []
            },
            {
                "name": "authorizedFor(Permission)",
                "visibility": "internal",
                "read_vars": [
                    "lockedPermissions",
                    "permissionIndexToName",
                    "msg.sender"
                ],
                "write_vars": [],
                "internal_calls": [
                    "require(bool,string)",
                    "abi.encodePacked()",
                    "isAuthorizedFor"
                ],
                "external_calls": [
                    "abi.encodePacked(Not authorized. You need the permission ,permissionIndexToName[uint256(permission)])"
                ]
            },
            {
                "name": "swapping()",
                "visibility": "internal",
                "read_vars": [],
                "write_vars": [
                    "inSwap"
                ],
                "internal_calls": [],
                "external_calls": []
            }
        ]
    }
]