INFO:Slither:Compilation warnings/errors on /sb/IDXM.sol:
/sb/IDXM.sol:30:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Owned() {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/IDXM.sol:62:5: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    throw;
    ^---^
/sb/IDXM.sol:80:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function IDXM() {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/IDXM.sol:9:28: Warning: Functions in interfaces should be declared external.
interface tokenRecipient { function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData) public; }
                           ^-----------------------------------------------------------------------------------------------^
/sb/IDXM.sol:123:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(msg.sender, _to, _amount);
    ^--------------------------------^
/sb/IDXM.sol:150:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(_from, _to, _amount);
    ^---------------------------^
/sb/IDXM.sol:180:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, _amount);
    ^-------------------------------------^
/sb/IDXM.sol:12:3: Warning: No visibility specified. Defaulting to "public". 
  function safeMul(uint256 a, uint256 b) returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/IDXM.sol:17:3: Warning: No visibility specified. Defaulting to "public". 
  function safeSub(uint256 a, uint256 b) returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/IDXM.sol:21:3: Warning: No visibility specified. Defaulting to "public". 
  function safeAdd(uint256 a, uint256 b) returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/IDXM.sol:30:3: Warning: No visibility specified. Defaulting to "public". 
  function Owned() {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/IDXM.sol:33:3: Warning: No visibility specified. Defaulting to "public". 
  function setOwner(address _owner) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/IDXM.sol:80:3: Warning: No visibility specified. Defaulting to "public". 
  function IDXM() {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/IDXM.sol:89:3: Warning: No visibility specified. Defaulting to "public". 
  function uploadBalances(address[] addresses, uint256[] balances) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/IDXM.sol:100:3: Warning: No visibility specified. Defaulting to "public". 
  function lockBalances() onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/IDXM.sol:110:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address _to, uint256 _amount) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/IDXM.sol:135:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address _from, address _to, uint256 _amount) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/IDXM.sol:162:3: Warning: No visibility specified. Defaulting to "public". 
  function approveAndCall(address _spender, uint256 _amount, bytes _extraData) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/IDXM.sol:177:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address _spender, uint256 _amount) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/IDXM.sol:184:3: Warning: No visibility specified. Defaulting to "public". 
  function setExportFee(address addr, uint256 fee) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/IDXM.sol:189:3: Warning: No visibility specified. Defaulting to "public". 
  function setHoldingPeriod(uint256 ts) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/IDXM.sol:228:3: Warning: No visibility specified. Defaulting to "public". 
  function unlockToken() onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/IDXM.sol:232:45: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function precalculate() internal returns (bool success) {
                                            ^----------^
/sb/IDXM.sol:12:3: Warning: Function state mutability can be restricted to pure
  function safeMul(uint256 a, uint256 b) returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/IDXM.sol:17:3: Warning: Function state mutability can be restricted to pure
  function safeSub(uint256 a, uint256 b) returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/IDXM.sol:21:3: Warning: Function state mutability can be restricted to pure
  function safeAdd(uint256 a, uint256 b) returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/IDXM.sol:237:3: Warning: Function state mutability can be restricted to pure
  function div10(uint256 a, uint8 b) internal returns (uint256 result) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/IDXM.sol:243:3: Warning: Function state mutability can be restricted to pure
  function pow10(uint256 a, uint8 b) internal returns (uint256 result) {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[92m
IDXM.decimals should be constant (/sb/IDXM.sol#45-46)
IDXM.feeDecimals should be constant (/sb/IDXM.sol#68-72)
IDXM.name should be constant (/sb/IDXM.sol#47-48)
IDXM.standard should be constant (/sb/IDXM.sol#46)
IDXM.symbol should be constant (/sb/IDXM.sol#48-50)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /sb/IDXM.sol#67-68:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
tokenRecipient.receiveApproval (/sb/IDXM.sol#9-11) should be declared external
SafeMath.safeMul (/sb/IDXM.sol#12-17) should be declared external
Owned.setOwner (/sb/IDXM.sol#33-38) should be declared external
IDXM.uploadBalances (/sb/IDXM.sol#90-105) should be declared external
IDXM.lockBalances (/sb/IDXM.sol#105-107) should be declared external
IDXM.transfer (/sb/IDXM.sol#112-131) should be declared external
IDXM.transferFrom (/sb/IDXM.sol#137-157) should be declared external
IDXM.approveAndCall (/sb/IDXM.sol#164-174) should be declared external
IDXM.setExportFee (/sb/IDXM.sol#189-197) should be declared external
IDXM.setHoldingPeriod (/sb/IDXM.sol#197-199) should be declared external
IDXM.unlockToken (/sb/IDXM.sol#235-237) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /sb/IDXM.sol:
	- pragma solidity^0.4.19 (/sb/IDXM.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Contract 'tokenRecipient' (/sb/IDXM.sol#9-11) is not in CapWords
Function 'Owned.Owned' (/sb/IDXM.sol#31-33) is not in mixedCase
Parameter '_owner' of Owned.setOwner (/sb/IDXM.sol#33-34) is not in mixedCase
Function 'IDXM.IDXM' (/sb/IDXM.sol#82-89) is not in mixedCase
Parameter '_to' of IDXM.transfer (/sb/IDXM.sol#112) is not in mixedCase
Parameter '_amount' of IDXM.transfer (/sb/IDXM.sol#112-113) is not in mixedCase
Parameter '_from' of IDXM.transferFrom (/sb/IDXM.sol#138) is not in mixedCase
Parameter '_to' of IDXM.transferFrom (/sb/IDXM.sol#138) is not in mixedCase
Parameter '_amount' of IDXM.transferFrom (/sb/IDXM.sol#138) is not in mixedCase
Parameter '_spender' of IDXM.approveAndCall (/sb/IDXM.sol#164-165) is not in mixedCase
Parameter '_amount' of IDXM.approveAndCall (/sb/IDXM.sol#165) is not in mixedCase
Parameter '_extraData' of IDXM.approveAndCall (/sb/IDXM.sol#165) is not in mixedCase
Parameter '_spender' of IDXM.approve (/sb/IDXM.sol#181-182) is not in mixedCase
Parameter '_amount' of IDXM.approve (/sb/IDXM.sol#182-184) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/sb/IDXM.sol analyzed (4 contracts), 28 result(s) found
